#!/bin/bash

set -euo pipefail
usage() {
  echo "Usage: $0 <path to app source> [console|html]"
  exit 1
}

if [ $# -lt 2 ]; then
  usage
fi

REPO_URL=''
REPO_BRANCH=''
LATEST_COMMIT_SHA=''

tmpdir=$(mktemp -d)
source=$1
shift

for arg in $@; do
  if [ "$arg" != "console" ] && [ "$arg" != "html" ]; then
    usage
  fi
done


modes="$@"
echo "Scanning ${source}"
for scanner in tools.d/*; do
  name=$(basename "${scanner}")
  report="${tmpdir}/${name}.sarif"
  echo "Running ${name} and reporting to ${report}"
  bash "$scanner" "$source" > "${report}" || rm -f "${report}"
done
echo "Scanning complete.  Reports found:"
ls "${tmpdir}"


# console output
if [[ "${modes}" =~ 'console' ]]; then

  # stop bearer output confusing the sarif library
  if grep -q 'results":null' "$tmpdir"/bearer.sarif; then
    rm -f "$tmpdir"/bearer.sarif
  fi
  echo "Summary:"
  sarif summary "${tmpdir}"/*.sarif
fi
# html output
if [[ "${modes}" =~ "html" ]]; then

  html_report="${source}/statica.html"
  REPO_URL=$(cd "${source}" && git config --get remote.origin.url || echo "unknown")
  REPO_BRANCH=$(cd "${source}" && git rev-parse --abbrev-ref HEAD || echo "unknown")
  LATEST_COMMIT_SHA=$(cd "${source}" && git rev-parse --short HEAD || echo "unknown")

  export REPO_URL REPO_BRANCH LATEST_COMMIT_SHA

  ./html_report.rb "${tmpdir}" "${html_report}"
  echo "HTML report at:"
  echo "${html_report}"
fi

rm -rf "${tmpdir}"
