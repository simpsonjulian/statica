#!/bin/bash

set -euo pipefail

usage() {
  echo "Usage: $0 <path to app source> [console|html]"
  exit 1
}

run_command() {
  local bin="${brew_prefix}/bin"
  local libexec="${brew_prefix}/opt/statica/libexec:${PATH}"
  PATH="${app_dir}:${bin}:${libexec}" "$@"
}

if [ $# -lt 2 ]; then
  usage
fi

REPO_URL=''
REPO_BRANCH=''
LATEST_COMMIT_SHA=''

tmpdir=$(mktemp -d)
path_to_file="$(readlink -f "$0")"
app_dir=$(dirname "$path_to_file")
brew_prefix=$(brew --prefix)

source=$1
shift

for arg in "$@"; do
  if [ "$arg" != "console" ] && [ "$arg" != "html" ]; then
    usage
  fi
done


modes="$*"
if [ -d "${app_dir}/tools.d" ]; then
  tools_dir="${app_dir}/tools.d"
else
  tools_dir="${brew_prefix}/opt/statica/libexec/tools.d"
fi

echo "Scanning ${source}"
for scanner in "${tools_dir}"/*; do
  name=$(basename "${scanner}")
  report="${tmpdir}/${name}.sarif"
  echo -n "Running ${name} ... "

  run_command "$scanner" "$source" > "${report}" || {
    echo "[NOT OK] There was an error running ${name}. No report saved."
    rm -f "${report}"
    continue
  }
  chars=$(wc -c < "${report}"| tr -d " ")
  echo "[OK] Ran ${name} and put ${chars} characters of sarif file in ${report}"

done
echo "Scanning complete.  Reports found:"
ls "${tmpdir}"


# console output
if [[ "${modes}" =~ 'console' ]]; then

  # stop bearer output confusing the sarif library
  if grep -q 'results":null' "$tmpdir"/bearer.sarif; then
    rm -f "$tmpdir"/bearer.sarif
  fi
  echo "Summary:"
  sarif summary "${tmpdir}"/*.sarif
fi
# html output
if [[ "${modes}" =~ "html" ]]; then

  html_report="${source}/statica.html"
  REPO_URL=$(cd "${source}" && git config --get remote.origin.url || echo "unknown")
  REPO_BRANCH=$(cd "${source}" && git rev-parse --abbrev-ref HEAD || echo "unknown")
  LATEST_COMMIT_SHA=$(cd "${source}" && git rev-parse --short HEAD || echo "unknown")

  export REPO_URL REPO_BRANCH LATEST_COMMIT_SHA

  run_command html_report.rb "${tmpdir}" "${html_report}"
  echo "HTML report at:"
  echo "${html_report}"
fi

rm -rf "${tmpdir}"
