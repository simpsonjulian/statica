#!/bin/bash

set -euo pipefail
which lizard > /dev/null || exit 1

source=$1
tmpdir=$(mktemp -d)
brew_prefix=$(brew --prefix)

choose() {
  local input=$1
  local column=$2
  echo "${input}" | cut -d ':' -f"${column}"
}

# run the scan, warnings only, ignore non-zero return code
result=${tmpdir}/lizard.out
lizard -w -o "${result}" "${source}" || true

[ -s "$result" ] || exit 1

awk -F':' '{print $2,$3, $1}' "${result}" | while read -r startline severity filename ; do
  printf "%s,%s,%s,%s,%s,%s\n" "complexity-above-15" "${severity}" "Function has a cyclomatic complexity value higher than 15" \
  "${filename}"  "${startline}"  0 >> "${tmpdir}"/findings.csv
done

PATH="${brew_prefix}/opt/statica/libexec:.:$PATH" csv2sarif "lizard" "$(lizard --version)" "${tmpdir}/findings.csv"

# clean up
rm -rf "${tmpdir}"
